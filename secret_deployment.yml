---
apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  name: ansible-runner
spec:
  lookupPolicy:
    local: false
  tags:
  - annotations: null
    from:
      kind: DockerImage
      name: registry.access.redhat.com/ansible-runner-11/ansible-runner
    generation: 1
    importPolicy: {}
    name: latest
    referencePolicy:
      type: Source
---
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: thycoticsecret
  annotations:
    "openshift.io/display-name": Thycotic Secrets
parameters:
  - description: The namespace to instantiate under. Defaults to 'kube-system'.
    name: NAMESPACE
    required: true
  - description: The user to access the thycotic server with.
    name: THYC_USER
    required: true
  - description: The password for the user to access the thycotic server with.
    name: THYC_PASS
    required: true
  - description: The thycotic server url.
    name: THYC_URL
    required: true
  - description: The ID of a folder object.
    name: THYC_FOLDER_ID
  - description: The ID of a single secret.
    name: THYC_SECRET_ID
  - description:
    name: TMP_PATH
    value: /tmp/secrets
objects:
  # Create a service account for creating the secrets
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: secret-writer
      namespace: "${NAMESPACE}"

  # RBAC to create secrets
  - apiVersion: authorization.openshift.io/v1
    kind: Role
    metadata:
      name: secret-writer
      namespace: "${NAMESPACE}"
    rules:
      - apiGroups:
        - ""
        resources:
        - create
        - delete
        - get
        - list
        - patch
        - update
        - watch

  # Source ansible image
  - kind: "ImageStream"
    apiVersion: "v1"
    metadata: 
      name: "ansible-runner"
      namespace: "${NAMESPACE}"
    spec: 
      dockerImageRepository: "registry.access.redhat.com/ansible-runner-11/ansible-runner7"
    status: 
      dockerImageRepository: ""

  # Built image
  - kind: "ImageStream"
    apiVersion: "v1"
    metadata: 
      name: thycotic-secret
      namespace: "${NAMESPACE}"

  # Build the image
  - kind: BuildConfig
    apiVersion: v1
    metadata:
      name: ansible-thycotic
      namespace: "${NAMESPACE}"
      annotations:
        description: Prepares a container with the roles and configuration in it.
    spec: 
      triggers: 
        - type: "ImageChange"
          imageChange:
            from:
              kind: "ImageStreamTag"
              name: "ansible-runner:latest"
        - type: "ConfigChange"
          source: 
            type: "Git"
            git: 
              uri: "https://github.com/t-v/thycotic-secret.git"
      strategy: 
        type: "Source"
        sourceStrategy: 
          from: 
            kind: "ImageStreamTag"
            name: "ansible-runner:latest"
      output: 
        to: 
          kind: "ImageStreamTag"
          name: "thycotic-secret:latest"

  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: frontend
      namespace: "${NAMESPACE}"
    spec:
      replicas: "${{REPLICA_COUNT}}"

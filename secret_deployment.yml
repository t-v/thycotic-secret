---
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: thycoticsecret
  annotations:
    "openshift.io/display-name": Thycotic Secrets
parameters:
  - description: The namespace to instantiate under. Defaults to 'kube-system'.
    name: NAMESPACE
    required: true
  - description: The user to access the thycotic server with.
    name: THYC_USER
    required: true
  - description: The password for the user to access the thycotic server with.
    name: THYC_PASS
    required: true
  - description: The thycotic server url.
    name: THYC_URL
    required: true
  - description: The ID of a folder object.
    name: THYC_FOLDER_ID
    value: ""
  - description: The ID of a single secret.
    name: THYC_SECRET_ID
    value: ""
  - description:
    name: TMP_PATH
    value: /tmp/secrets
objects:
  # Create a service account for creating the secrets
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: secret-writer
      namespace: "${NAMESPACE}"

  # RBAC to create secrets
  - apiVersion: authorization.openshift.io/v1
    kind: Role
    metadata:
      name: secret-writer
      namespace: "${NAMESPACE}"
    rules:
      - apiGroups:
          - ""
        resources:
          - secrets
        verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch

  # Source ansible image
  - kind: "ImageStream"
    apiVersion: "v1"
    metadata: 
      name: "ansible-runner"
      namespace: "${NAMESPACE}"
    spec: 
      dockerImageRepository: "registry.redhat.io/ansible-runner-12/ansible-runner"
    status: 
      dockerImageRepository: ""

  # Built image
  - kind: "ImageStream"
    apiVersion: "v1"
    metadata: 
      name: thycotic-secret
      namespace: "${NAMESPACE}"

  # Build the image
  - kind: BuildConfig
    apiVersion: v1
    metadata:
      name: ansible-thycotic
      namespace: "${NAMESPACE}"
      annotations:
        description: Prepares a container with the roles and configuration in it.
    spec: 
      triggers: 
        - type: "ImageChange"
          imageChange:
            from:
              kind: "ImageStreamTag"
              name: "ansible-runner:latest"
        - type: "ConfigChange"
          source: 
            type: "Git"
            git: 
              uri: "https://github.com/t-v/thycotic-secret.git"
      source:
        type: Git
        git:
          uri: "https://github.com/t-v/thycotic-secret.git"
      strategy: 
        type: "Source"
        sourceStrategy: 
          from: 
            kind: "ImageStreamTag"
            name: "ansible-runner:latest"
      output: 
        to: 
          kind: "ImageStreamTag"
          name: "thycotic-secret:latest"

  # Create secret
  - apiVersion: v1
    kind: Secret
    metadata:
      name: playbook-vars
      namespace: "${NAMESPACE}"
    type: Opaque
    stringData:
      main.yml: |-
        ---
        pim_folder_id: "${THYC_FOLDER_ID}"
        pim_secret_id: "${THYC_SECRET_ID}"

        thycotic_config:
          url: "${THYC_URL}"
          username: "${THYC_USER}"
          password: "${THYC_PASS}"

        openshift_project: "${NAMESPACE}"
        destination_openshift_secret_path: "${TMP_PATH}"

  # Create task
  - apiVersion: batch/v1beta1
    kind: CronJob
    metadata:
      name: sync-thycotic-secrets
      namespace: "${NAMESPACE}"
    spec:
      schedule: "*/60 * * * *"
      jobTemplate:
        metadata:
          labels:
            job: sync-thycotic-secrets
        spec:
          template:
            spec:
              containers:
                - name: sync-thycotic-secrets
                  image: thycotic-secret:latest
                  command: ["/thycotic/runansible.sh"]
                  serviceAccountName: secret-writer
                  volumeMounts:
                  - name: configmap
                    mountPath: /configmap
              restartPolicy: Never
              volumes:
                - name: configmap
                  configMap:
                    name: playbook-vars

